# 位运算

# 二进制： 0 1 
'''

# 二进制底 ：    1 1
# 十进制底 ：8 4 2 1 

'''
a = 3
print(bin(a))   # 0b11 （0b代表是二进制数）

a =13
print(bin(a))

b = 0b10111 # 0b二进制  二进制表示：0b1000101

print(int(b)) 

c = -8 # 
print(bin(c))


c = 0o6430  # 0o开头的都是八进制  里面是数字不能超过8

print(int(c))

# 16进制开头表示0x  0-9 a-f
d = 0x9ab16

print(int(d))

'''
& 与
| 或
~ 非
^ 异或 
<< 左移
>> 右移
'''
print(3 & 2)
'''
& 类似and
   0000 0011
 & 0000 0010
 -------------
   0000 0010
| 类似or
   0000 0011
 & 0000 0010
 -------------
   0000 0011
'''

print(5 | 3 )
'''
| 类似or
   0000 0101
 & 0000 0011
 -------------
   0000 0111
'''
print(~5) #取反 将十进制的数字对应的二进制进行取反操作，即5的二进制取反
'''
~ 取反码
   0000 0101
 -------------
   1111 1010 （取反后的二进制数）

   看第一位可见此数为负（第一位是符号位，只要第一位是1的就是负数，第一位是0的是正数）
   既然二进制第一位是负数，那么如何转成10进制呢，就按照负数的二进制求法反向求就好了
-
   1111 1010 减1
   1111 1001 取反
   0000 0110 6

   所以是-6  

'''

# 异或 ^ 相同的是0 不同的是1
print(3^5)  
'''
# 步骤：
1. 将左边的数字转成二进制
2. 将右边的数字转成二进制
3. 对齐，上下进行比较（相同的是0 不同的是1）
3   0000 0011 
5   0000 0101
---------------
    0000 0110   ------>6
'''


# 左移、右移：
print(2 << 1)   # 4
print(2 >> 1)   # 1

'''
2的二进制：

0000 0010
左移： m << n m*2的n次方
右移： m >> n m//2的n次方
'''
print(16<<2)
print(16>>2)

